# vim: ft=sh

SUBCOMMAND_DESC="\tInspect definitions"
SUBCOMMAND_HELP=$(cat <<EOH
Usage ${MAIN_COMMAND} ${SUBCOMMAND}

list        List all definitions, not only those
            which apply to this machine.

show DEF    Show the contents of a definition, where
            DEF is the definition name, example: global/utilities

update      Will run a "git pull --ff-only" on GRIND_DEF_DIR only if
            GRIND_DEF_DIR != ROOT_DIR/definitions which means it
            only will act if your definitions directory is an
            external directory to grind's directory.

EOH
)

case ${1} in
  list)
    log "listing definitions from ${GRIND_DEF_DIR}"
    for i in $(export LC_COLLATE=C; find ${GRIND_DEF_DIR} -not -path '*/\.*' -type f -or -type l | sort); do
      in_cyan ">>>${i##${GRIND_DEF_DIR}/}<<<\n";
    done
  ;;
  show)
    log "show contents of ${2}"
    if [[ -f "${GRIND_DEF_DIR}/${2}" ]]; then
      log "cating ${GRIND_DEF_DIR}/${2}"
      cat "${GRIND_DEF_DIR}/${2}"
    elif [[ -n ${2} ]]; then
      error "'${2}' not found.\n"
    fi
  ;;
  update)
    log "defs update GRIND_DEF_DIR=${GRIND_DEF_DIR} ROOT_DIR=${ROOT_DIR}"
    if [[ "${GRIND_DEF_DIR}" != "${ROOT_DIR}/definitions" ]]; then
      log "cd into ${GRIND_DEF_DIR}"
      cd ${GRIND_DEF_DIR}
      log "calling git pull --ff-only"
      in_cyan "Updating ${GRIND_DEF_DIR}...\n"
      git pull --ff-only
    else
      warn "Definitions directory is the same as grind's directory.\n"
    fi
esac
